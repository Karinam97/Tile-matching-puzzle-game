@import url('https://fonts.googleapis.com/css2?family=Azeret+Mono&display=swap');
body{
  font-family: 'Azeret Mono', monospace;
  text-align: center;
  color: #fff;
  min-width: 500px;
}

h1, .scoreAndTime{
  width: 100%;
}

.game{
  margin: 50px auto;
  background-image: url("images/background.jpg");
  background-size: cover;
  background-position: center;
  border-radius: 20px;
  width: 80%;
  height: 90vh;
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
}

.scoreAndTime{
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

.board{
  margin: auto;
  width: 80%;
  display: grid;
  justify-items: center;
  grid-template: 1fr / 1fr 1fr;

}

.flip-card {
  margin: 20px;
  width: 100px;
  height: 100px;
  transition: transform 1.8s;
  position: relative;

  /*this property must be used with transform prop.
  as it preserves the 3D transformations*/
  transform-style: preserve-3d;
}

.flip-card-back{
  background-image: url('images/blank.jpg');
}
.flip-card.open {
  pointer-events: none; /*disables double-clicking when card is open*/

}
.flip-card.matched{
  /*********hides the picture from the screen***********/
  visibility: hidden;
}

.flip-card-front, .flip-card-back {
  position: absolute; /*the element is positioned absolutely to its first positioned parent*/
  right: 0;
  width: 100%;
  height: 100%;
  text-align: center;
  border: 1px solid white;
}

.flip-card-front {
  /*if 0 degrees then the second elemnt is in front of an first element, if 180 then it is hidden behind first element which is front card*/
  transform: rotateY(180deg);
  /*this card is already flipped 180degrees that is why is not visible.
  once flip-card is flipped it will be visible as it will be at 180degrees position too */
  background-color: rgb(50 50 49 / 83%);
}
